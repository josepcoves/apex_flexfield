set define off verify off feedback off
whenever sqlerror exit sql.sqlcode rollback
--------------------------------------------------------------------------------
--
-- ORACLE Application Express (APEX) export file
--
-- You should run the script connected to SQL*Plus as the Oracle user
-- APEX_050000 or as the owner (parsing schema) of the application.
--
-- NOTE: Calls to apex_application_install override the defaults below.
--
--------------------------------------------------------------------------------
begin
wwv_flow_api.import_begin (
 p_version_yyyy_mm_dd=>'2013.01.01'
,p_release=>'5.0.2.00.07'
,p_default_workspace_id=>13707805413010735447
,p_default_application_id=>52892
,p_default_owner=>'JOSEPCOVES'
);
end;
/
prompt --application/ui_types
begin
null;
end;
/
prompt --application/shared_components/plugins/item_type/es_relational_josepcoves_flexfield
begin
wwv_flow_api.create_plugin(
 p_id=>wwv_flow_api.id(16662093501667992729)
,p_plugin_type=>'ITEM TYPE'
,p_name=>'ES.RELATIONAL.JOSEPCOVES.FLEXFIELD'
,p_display_name=>'Relational: Flexfield'
,p_supported_ui_types=>'DESKTOP'
,p_plsql_code=>wwv_flow_utilities.join(wwv_flow_t_varchar2(
'  --Renders <option> tags after executing @p_sql',
'  --keeps selected p_current_val',
'  procedure render_lov_sql(p_sql in apex_application_lovs.list_of_values_query%type, ',
'                           p_current_val in APEX_APPLICATION_LOV_ENTRIES.return_value%type) ',
'  is',
'    TYPE itemRec is record (disp APEX_APPLICATION_LOV_ENTRIES.display_value%type,ret APEX_APPLICATION_LOV_ENTRIES.return_value%type);',
'    TYPE itemSet is table of itemRec;',
'    v_selected varchar2(2000);',
'    v_options itemSet;',
'    ',
'  begin',
'    EXECUTE IMMEDIATE p_sql',
'       BULK COLLECT INTO v_options;',
'    for i in v_options.FIRST..v_options.LAST',
'    loop',
'      if (p_current_val = v_options(i).ret) then v_selected := '' selected '';',
'      else v_selected := '''';',
'      end if;',
'      htp.p (''<option value="''||v_options(i).ret||''" ''||v_selected||''>''||v_options(i).disp||''</option>'');',
'    end loop;',
'  end render_lov_sql;',
'  ',
'  ',
'  /*********************',
'   Main render function',
'  **********************/',
'  function render_item (',
'    p_item                in apex_plugin.t_page_item,',
'    p_plugin              in apex_plugin.t_plugin,',
'    p_value               in varchar2,    ',
'    p_is_readonly         in boolean,',
'    p_is_printer_friendly in boolean )',
'    return apex_plugin.t_page_item_render_result ',
'   AS  ',
'   ',
'    v_result apex_plugin.t_page_item_render_result; ',
'    v_page_item_name varchar2(100);',
'    ',
'    v_html varchar2(9000);',
'    ',
'    ',
'    --p_flexfield_def   p_item.attribute_01%type:= p_item.attribute_01;',
'    ',
'    t_column_value_list       apex_plugin_util.t_column_value_list;',
'   ',
'    v_flex_name varchar2(4000);',
'    v_flex_desc varchar2(4000);',
'    v_flex_type varchar2(4000);',
'    v_flex_lov varchar2(4000);',
'    v_flex_nullable char(1);',
'    v_flex_size integer;',
'    v_flex_max_length number;',
'    v_flex_height number;',
'    v_flex_html_attr varchar2(4000);',
'    v_flex_lov_sql varchar2(4000);',
'   ',
'    v_lov_type varchar2(4000);',
'    ',
'    v_len int;',
'        ',
'    v_sql apex_application_lovs.list_of_values_query%type;',
'    ',
'  BEGIN',
'    ',
'    IF apex_application.g_debug THEN',
'      apex_plugin_util.debug_page_item (p_plugin                => p_plugin,',
'                                        p_page_item             => p_item,',
'                                        p_value                 => p_value,',
'                                        p_is_readonly           => p_is_readonly,',
'                                        p_is_printer_friendly   => p_is_printer_friendly);',
'    END IF;',
'    ',
'    ',
'    IF p_is_readonly OR p_is_printer_friendly THEN    ',
'      apex_plugin_util.print_hidden_if_readonly (p_item_name             => p_item.name,',
'                                                 p_value                 => p_value,',
'                                                 p_is_readonly           => p_is_readonly,',
'                                                 p_is_printer_friendly   => p_is_printer_friendly);',
'      apex_plugin_util.print_display_only (p_item_name          => p_item.NAME,',
'                                           p_display_value      => p_value,',
'                                           p_show_line_breaks   => FALSE,',
'                                           p_escape             => TRUE,',
'                                           p_attributes         => p_item.element_attributes);',
'    ELSE',
'      ',
'      /********* Retreiving parameters and attributes **********/',
'      v_page_item_name := apex_plugin.get_input_name_for_page_item (p_is_multi_value => FALSE);',
'      ',
'      t_column_value_list := apex_plugin_util.get_data (',
'                             p_sql_statement  => p_item.lov_definition,',
'                             p_min_columns    => 4,',
'                             p_max_columns    => 10, ',
'                             p_component_name => p_item.id); ',
'     ',
'     ',
'     v_len := t_column_value_list.count;',
'     for i in 1 .. t_column_value_list(1).count /* label */',
'     loop',
'      v_flex_name      := t_column_value_list(1)(i);',
'      v_flex_desc      := t_column_value_list(2)(i);',
'      v_flex_type      := t_column_value_list(3)(i);',
'      v_flex_lov       := t_column_value_list(4)(i);',
'      ',
'      if (v_len > 4) then',
'        v_flex_nullable  := t_column_value_list(5)(i);',
'      end if;',
'      if (v_len > 5) then',
'        v_flex_size      := t_column_value_list(6)(i);',
'      end if;',
'      if (v_len > 6) then',
'        v_flex_max_length := t_column_value_list(7)(i);',
'      end if;',
'      if (v_len > 7) then',
'        v_flex_height    := t_column_value_list(8)(i);',
'      end if;',
'      if (v_len > 8) then',
'        v_flex_html_attr := t_column_value_list(9)(i);',
'      end if;',
'      if (v_len > 9) then      ',
'        v_flex_lov_sql   := t_column_value_list(10)(i);',
'      end if;  ',
'    ',
'     end loop; ',
'      ',
'      if v_flex_type in (''LOV'') then',
'        ',
'        select lov_type into v_lov_type from apex_application_lovs',
'        where list_of_values_name = v_flex_lov  and application_id = v(''APP_ID'') and rownum <2;',
'                ',
'         ',
'        htp.p(',
'                  ''<select ',
'                          name="''||v_page_item_name||''" ',
'                          id="''||p_item.name||''" ',
'                          class="text_field" ',
'                          title="''||v_flex_desc||''"',
'                          value="''||p_value||''" ',
'                         ''||v_flex_html_attr||''',
'                          >''            ',
'',
'                );      ',
'        if (v_flex_nullable = ''S'') then',
'          htp.p(''<option value="" ''||case when p_value is null then '' selected '' end||''> - </option>'');',
'        end if;',
'        if (v_lov_type = ''Static'') then',
'          ',
'          for c in (select display_value,return_value ',
'                      from APEX_APPLICATION_LOV_ENTRIES',
'                     where list_of_values_name = v_flex_lov and application_id = v(''APP_ID'')) loop',
'                     htp.p(''<option value="''||c.return_value||''" ''||case when p_value=c.return_value then '' selected'' else '''' end ||''>''||c.display_value||''</option>'');        ',
'          end loop;',
'        else',
'        ',
'          select list_of_values_query into v_sql',
'            from apex_application_lovs',
'           where list_of_values_name = v_flex_lov and application_id = v(''APP_ID'') and rownum <2;',
'          ',
'          render_lov_sql(p_sql => v_sql, p_current_val => p_value);  ',
'          ',
'        end if;',
'        ',
'        htp.p(''</select>'');   ',
'      elsif v_flex_type=''LOVSQL'' then',
'         htp.p(',
'                  ''<select ',
'                          name="''||v_page_item_name||''" ',
'                          id="''||p_item.name||''" ',
'                          class="text_field" ',
'                          title="''||v_flex_desc||''"',
'                          value="''||p_value||''" ',
'                          ''||v_flex_html_attr||''',
'                          >''            ',
'',
'                );      ',
'        if (v_flex_nullable = ''S'') then',
'          htp.p(''<option value="" ''||case when p_value is null then '' selected '' end||''> - </option>'');',
'        end if;',
'',
'        render_lov_sql(p_sql=>v_flex_lov_sql, p_current_val=>p_value);',
'        htp.p(''</select>'');   ',
'           ',
'       ',
'        ',
'      elsif v_flex_type=''TEXTAREA'' then',
'        htp.p(''<textarea name="''||v_page_item_name||''" ',
'                         id ="''||p_item.name||''" ',
'                         title="''||v_flex_desc||''"',
'                         cols="''||nvl(v_flex_size,p_item.element_width)||''" ',
'                         maxlength="''||nvl(nvl(v_flex_max_length,p_item.element_max_length),4000)||''"',
'                         rows="''||v_flex_height||''"',
'                         ''||v_flex_html_attr||''>''||p_value||''</textarea>'');',
'      else',
'      --TIPUS STRING o desconegut',
'        htp.p(',
'                  ''<input type="text" ',
'                          name="''||v_page_item_name||''" ',
'                          id="''||p_item.name||''" ',
'                          value="''||p_value||''" ',
'                          title="''||v_flex_desc||''"',
'                          size="''||nvl(nvl(v_flex_size,p_item.element_width),30)||''" ',
'                          maxlength="''||nvl(nvl(v_flex_max_length,p_item.element_max_length),4000)||''"',
'                          ''||v_flex_html_attr||'' >''',
'',
'                );                            ',
'      end if;',
'      ',
'     ',
'            ',
' ',
'      /****** JAVASCRIPT **************/      ',
'      ',
'      ',
'       --Afegim el placeholder en cas que estigui definit',
'       if (p_item.placeholder is not null) then',
'         v_html := v_html||''$(''''#''||p_item.name||'''''').attr(''''placeholder'''',''''''||nvl(p_item.placeholder,'''')||'''''');'';',
'       end if;',
'       apex_javascript.add_onload_code (p_code => v_html);',
'       ',
'    END IF; ',
'    RETURN v_result;',
'  end render_item;',
'  ',
'  ',
'  ',
'  ',
'  ',
'  '))
,p_render_function=>'render_item'
,p_standard_attributes=>'VISIBLE:FORM_ELEMENT:SESSION_STATE:READONLY:QUICKPICK:SOURCE:FORMAT_MASK_DATE:ELEMENT:WIDTH:ELEMENT_OPTION:PLACEHOLDER:ENCRYPT:LOV:LOV_REQUIRED'
,p_sql_min_column_count=>4
,p_sql_max_column_count=>10
,p_sql_examples=>wwv_flow_utilities.join(wwv_flow_t_varchar2(
'<pre>',
'select FLEX_NAME,        --(varchar2) Flexfield name<br>',
'       FLEX_DESC,        --(varchar2) Flexfield description -> Shown at help<br>',
'       FLEX_TYPE,        --(varchar2) STRING, LOV, LOVSQL, TEXTAREA -> Type of flexfield<br>',
'       FLEX_LOV,         --(varchar2) Name of APEX LOV for LOV type flexfields<br>',
'       FLEX_NULLABLE,    --(char(1))  S, N -> Specifies if allows null values<br>',
'       FLEX_SIZE,        --(Integer)  Size of the HTML element<br>',
'       FLEX_MAX_LENGTH,  --(Integer)  Max length of its content (only for STRING and TEXTAREA types)<br>',
'       FLEX_HEIGHT,      --(Integer)  Height of HTML element (only for TEXTAREA)<br>',
'       FLEX_HTML_ATTR,   --(varchar2) Additional HTML element attributes<br>',
'       FLEX_LOV_SQL      --(varchar2) In case TYPE= LOVSQL this column specifies LOV SQL returning pairs display value and return value<br>',
'from FLEXFIELD_DEF<br>',
'where flexfield_name = ''MyField01''<br>',
'</pre>'))
,p_substitute_attributes=>true
,p_subscribe_plugin_settings=>true
,p_help_text=>wwv_flow_utilities.join(wwv_flow_t_varchar2(
'<b>',
'  <h1>RELATIONAL: Flexfield </h1>',
'  <p>RELATIONAL </p>',
'  <p>Josep Coves - josepcoves@relational.es</p>',
'  <p>Creation Date: November - 2015</p>',
'  <br>',
'  <br>',
'  <h2><i>History review:</i></h2>',
'</b><br>',
'<br>',
'<p>APEX flexible item, its type is defined at runtime</p>',
'<p>Available item types are: <ul><li>STRING</li><li>LOV</li><li>TEXTAREA</li> </p>',
'<p>Features</p>',
'<ul>',
'  <li></li>',
'</ul',
'<p><i>',
'Additional info:<br>',
'</p></i></br>',
'',
'<p>',
'    <strong>Flexfield</strong>',
'</p>',
'<p>',
'    <strong> </strong>',
'</p>',
'<p>',
'    The aim of this plugin is to provide dynamic item types which will be loaded at plugin runtime. For people who worked with Oracle eBusinessSuite I',
'    developed a similar idea which could fit perfectly with their own EBS flexfields.',
'</p>',
'<p>',
'    <strong>Requisites to use:</strong>',
'</p>',
'<p>',
'    · An existing data base table with N flexfield fields of varchar2(4000) to fill',
'</p>',
'<p>',
'    · Optional: flexfield metadata table (FLEXFIELD_DEF, see example below)',
'</p>',
'<p>',
'    · This plugin on some page',
'</p>',
'<p>',
'    <strong>Case of use</strong>',
'</p>',
'<p>',
'    Some applications leave administrators the capability of extending its application by adding some fields to existing tables. In that case, administrator',
'    can expand application functionality by storing some data to application without the need of technical assistance.',
'</p>',
'<p>',
'    Imagine you have your business table of products',
'</p>',
'<p>',
'    PRODUCTS',
'</p>',
'<p>',
'    You can define N flexfield items which application administrator will define:',
'</p>',
'<p>',
'    PRODUCTS:',
'</p>',
'<p>',
'    FLEXFIELD_001 (varchar2(4000))',
'</p>',
'<p>',
'    FLEXFIELD_002 (varchar2(4000))',
'</p>',
'<p>',
'    ...',
'</p>',
'<p>',
'    FLEXFIELD_NNN (varchar2(4000))',
'</p>',
'<p>',
'    Then you need a parametrization table for flexfield metadata, for instance:',
'</p>',
'<p>',
'    FLEXFIELD_DEF:',
'</p>',
'<p>',
'    Then you define a page which uses this plugin by querying previous table. SQL of flexfield plugin:',
'</p>',
'<p>',
'    SELECT FLEX_NAME',
'</p>',
'<p>',
'    FLEX_DESCR,',
'</p>',
'<p>',
'    FLEX_TYPE,',
'</p>',
'<p>',
'    FLEX_SOURCE,',
'</p>',
'<p>',
'    ‘N’ FLEX_NULLABLE,',
'</p>',
'<p>',
'    30 FLEX_SIZE',
'</p>',
'<p>',
'    null FLEX_MAX_SIZE,',
'</p>',
'<p>',
'    null FLEX_HEIGHT,',
'</p>',
'<p>',
'    ‘’ FLEX_HTML_ATTRIBUTES',
'</p>',
'<p>',
'    FROM FLEXFIELD_DEF',
'</p>',
'<p>',
'    WHERE FLEX_NAME = ‘MyFlex01’ and ACTIVE = ‘S’',
'</p>',
'<p>',
'    <strong>Some tricks</strong>',
'    :',
'</p>',
'<p>',
'    · You can dynamically display item label by caching its value via ITEM. For instance, define item plugin label as &amp;P1_ITEM. And inform item value at',
'    page value, by reading FLEXFIELD_DEF table.',
'</p>',
'<p>',
'    · Like previous sample, you can dynamically define its column name for a report using previous item &amp;P1_ITEM.',
'</p>',
'<p>',
'    · You can lookup display value for report listing using FLEXFIELD.lookup_display_value(table,column,lov_return_value)',
'</p>',
'<p>',
'    · If you keep a naming convention for application items like &lt;PREFIX&gt;_TABLE_&lt;FLEX_NUMBER&gt; you can call procedure:',
'    FLEXFIELD.intialize_application_items which will set each application time with its value',
'</p>',
'<p>',
'    Available item types:',
'</p>',
'<p>',
'    · STRING: Textfield',
'</p>',
'<p>',
'    · TEXTAREA: TextArea',
'</p>',
'<p>',
'    · LOV: Select list (via APEX Lov)',
'</p>',
'<p>',
'    o Static',
'</p>',
'<p>',
'    o Dynamic',
'</p>',
'<p>',
'    · LOVSQL: LOV based on user SQL',
'</p>',
'<p>',
'    o LOV_SQL column must be informed with inner sql',
'</p>'))
,p_version_identifier=>'1.0'
,p_about_url=>'http://www.relational.es'
);
end;
/
begin
wwv_flow_api.import_end(p_auto_install_sup_obj => nvl(wwv_flow_application_install.get_auto_install_sup_obj, false), p_is_component_import => true);
commit;
end;
/
set verify on feedback on define on
prompt  ...done
